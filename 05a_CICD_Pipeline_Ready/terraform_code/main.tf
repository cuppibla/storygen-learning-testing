
# This file is autogenerated. Do not edit this file directly.
# Please make changes to the application template instead.

module "frontend-service" {
  source                        = "github.com/GoogleCloudPlatform/terraform-google-cloud-run//modules/v2?ref=v0.20.1"
  project_id                    = "sdlc-468305"
  location                      = "us-central1"
  service_name                  = "genai-frontend"
  containers                    = [{"container_image" = "us-docker.pkg.dev/cloudrun/container/hello", "container_name" = "frontend-container", "env_vars" = {"backend_service_SERVICE_ENDPOINT" = module.backend-service.service_uri}}]
  service_account_project_roles = ["roles/run.invoker"]
  vpc_access = {
    egress = "ALL_TRAFFIC"
    network_interfaces = {
      network    = "default"
      subnetwork = "default"
    }
  }
  cloud_run_deletion_protection = false
  enable_prometheus_sidecar     = true
  service_scaling = {
    min_instance_count = 0
  }
  template_scaling = {
    max_instance_count = 2
    min_instance_count = 0
  }
  depends_on = [module.project-services-sdlc-468305, module.project-services-billing-project]
}
module "backend-service" {
  source                        = "github.com/GoogleCloudPlatform/terraform-google-cloud-run//modules/v2?ref=v0.20.1"
  project_id                    = "sdlc-468305"
  location                      = "us-central1"
  service_name                  = "genai-backend"
  containers                    = [{"container_image" = "us-docker.pkg.dev/cloudrun/container/hello", "container_name" = "backend-container"}]
  service_account_project_roles = ["roles/aiplatform.user", "roles/secretmanager.secretAccessor"]
  vpc_access = {
    egress = "ALL_TRAFFIC"
    network_interfaces = {
      network    = "default"
      subnetwork = "default"
    }
  }
  cloud_run_deletion_protection = false
  enable_prometheus_sidecar     = true
  service_scaling = {
    min_instance_count = 0
  }
  service_labels = {
    imagen_vertex_ai_vertex-ai = "true"
  }
  template_scaling = {
    max_instance_count = 2
    min_instance_count = 0
  }
  depends_on = [module.project-services-sdlc-468305, module.project-services-billing-project]
}
module "imagen-vertex-ai" {
  source        = "github.com/terraform-google-modules/terraform-google-project-factory//modules/project_services?ref=v18.0.0"
  project_id    = "sdlc-468305"
  activate_apis = ["aiplatform.googleapis.com"]
  depends_on    = [module.project-services-sdlc-468305, module.project-services-billing-project]
}
module "generated-images-bucket" {
  source        = "github.com/terraform-google-modules/terraform-google-cloud-storage//modules/simple_bucket?ref=v10.0.2"
  project_id    = "sdlc-468305"
  location      = "us-central1"
  name          = "genai-story-images"
  iam_members   = concat([{"role" = "roles/storage.objectAdmin", "member" = module.frontend-service.service_account_id.member}], [{"member" = module.backend-service.service_account_id.member, "role" = "roles/storage.objectAdmin"}])
  storage_class = "STANDARD"
  depends_on    = [module.project-services-sdlc-468305, module.project-services-billing-project]
}
module "project-services-sdlc-468305" {
  source                      = "github.com/terraform-google-modules/terraform-google-project-factory//modules/project_services?ref=v17.1.0"
  project_id                  = "sdlc-468305"
  disable_services_on_destroy = false
  activate_apis               = []
}
module "project-services-billing-project" {
  source                      = "github.com/terraform-google-modules/terraform-google-project-factory//modules/project_services?ref=v17.1.0"
  project_id                  = "sdlc-468305"
  disable_services_on_destroy = false
  activate_apis               = ["apphub.googleapis.com", "cloudresourcemanager.googleapis.com"]
}
